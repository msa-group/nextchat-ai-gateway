Parameters:
  GatewayId:
    Type: String
    Default: 'gw-cu9g7dem1hkn32ee70bg'
  EnvironmentId:
    Type: String
    Default: 'env-cu9g82mm1hkui0vcv5eg'
  Region:
    Type: String
    Default: 'cn-hangzhou'
  Name:
    Type: String
    Default: 'nextchat-web'

Composer:
  Backend:
    Component: fc3
    Properties:
      Function:
        CustomContainerConfig:
          Fn::Sub:
            - '{"Port": 3000,"Image":"registry.${Region}.aliyuncs.com/oss-share/msa:chatgpt-next-web-v2", "RegistryConfig":{"CertConfig":{"Insecure":false}}}'
            - Region: {{Parameters.Region}}
        EnvironmentVariables: '{"CUSTOM_MODELS":"-all,+gpt-3.5-turbo@OpenAI,+gpt-4o@OpenAI,+gpt-4@OpenAI,+gpt-4-turbo@OpenAI,+qwen-max@OpenAI,+qwen-turbo@OpenAI,+qwen-plus@OpenAI", "OPENAI_API_KEY": "unused", "DEFAULT_MODEL":"qwen-max"}'
    Parameters:
      Name: {{Subfix(Parameters.Name)}}

  Service:
    DependsOn: Backend
    Component: apig.service
    Parameters:
      Port: 80
      AddressesName: {{RosOutputHostName(Backend.HttpTrigger, "UrlIntranet")}}
      Name: {{Subfix(Join([Parameters.Name, 'svc']))}}

  LLMSvc:
    Component: apig.service
    Parameters:
      Port: 443
      AddressesName: dashscope.aliyuncs.com
      Name: {{Subfix('dashscope-svc')}}

  RouteApi:
    Component: apig.http.api
    Parameters:
      ApiName: {{Subfix(Join([Parameters.Name, 'http']))}}

  HttpRoute:
    DependsOn:
      - Service
      - LLMSvc
      - RouteApi
    Component: apig.route
    Operation:
      ApiId: {{RosOutput(RouteApi, "HttpApiId")}}
      Name: index
      Path: 'Prefix /'
      Scene: SingleService
      Services:
        - ServiceId: {{RosOutput(Service, "ServiceId")}}
          Protocol: HTTP
          Weight: 100
  
  LLMHttpRoute:
    DependsOn:
      - Service
      - LLMSvc
      - RouteApi
    Component: apig.route
    Operation:
      ApiId: {{RosOutput(RouteApi, "HttpApiId")}}
      Name: dashscope
      Path: 'Prefix /v1'
      Scene: SingleService
      Services:
        - ServiceId: {{RosOutput(LLMSvc, "ServiceId")}}
          Protocol: HTTP
          Weight: 100
  
  HttpRewritePolicy:
    DependsOn: HttpRoute
    Component: apig.router.policy
    Parameters:
      PolicyClassName: "HttpRewrite"
      PolicyConfig:
        Fn::Sub:
          - '{"pathType":"Prefix","host":"${HOST}","enable":true}'
          - HOST: {{RosOutputHostName(Backend.HttpTrigger, "UrlIntranet")}}
      RouteIds:
        - {{RosOutput(HttpRoute, "RouteId")}}

  AiProxyPlugin:
    DependsOn: LLMHttpRoute
    Component: apig.router.plugin
    Parameters:
      PluginClassId: pls-cqebrgh4ckt6ppatmprh
      RouteIds:
        - {{RosOutput(LLMHttpRoute, "RouteId")}}
      PluginConfig: |
        provider:
          modelMapping:
            '*': qwen-max
          type: qwen
          apiTokens:
            - sk-xxx
 